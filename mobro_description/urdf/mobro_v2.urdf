<?xml version="1.0" ?>
<robot name="mobro">
  <!-- Base Link -->
  <link name="base_link"/>
  <!-- <xacro:include filename="$(find mobRobURDF_description)/urdf/gazebo_files/gazebo_sensors.xacro" /> -->
  <material name="Gray">
    <color rgba="0.5 0.5 0.5 1.0"/>
  </material>
  <material name="Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="Red">
    <color rgba="1.0 0.0 0.0 1.0"/>
  </material>
  <material name="Blue">
    <color rgba="0.0 0.0 1.0 1.0"/>
  </material>
  <material name="Green">
    <color rgba="0.0 1.0 0.0 1.0"/>
  </material>
  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <link name="chassis">
    <inertial>
      <mass value="1.0"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.06083333333333334" ixy="0" ixz="0" iyy="0.1275" iyz="0" izz="0.17333333333333334"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.2 0.8 0.3"/>
      </geometry>
      <material name="Gray"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="1.2 0.8 0.3"/>
      </geometry>
    </collision>
  </link>
  <!-- Fixed Joint between base_link and chassis -->
  <joint name="base_to_chassis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin rpy="0 0 0" xyz="0 0 0.37"/>
  </joint>
  <link name="left_wheel">
    <inertial>
      <mass value="0.5"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00665" ixy="0" ixz="0" iyy="0.00665" iyz="0" izz="0.0121"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.12" radius="0.22"/>
      </geometry>
      <material name="Black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.12" radius="0.22"/>
      </geometry>
    </collision>
  </link>
  <joint name="left_joint" type="continuous">
    <parent link="chassis"/>
    <child link="left_wheel"/>
    <origin rpy="0 0 0" xyz="0.3 0.46 -0.15"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="right_wheel">
    <inertial>
      <mass value="0.5"/>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00665" ixy="0" ixz="0" iyy="0.00665" iyz="0" izz="0.0121"/>
    </inertial>
    <visual>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.12" radius="0.22"/>
      </geometry>
      <material name="Black"/>
    </visual>
    <collision>
      <origin rpy="1.5707963267948966 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.12" radius="0.22"/>
      </geometry>
    </collision>
  </link>
  <joint name="right_joint" type="continuous">
    <parent link="chassis"/>
    <child link="right_wheel"/>
    <origin rpy="0 0 0" xyz="0.3 -0.46 -0.15"/>
    <axis xyz="0 1 0"/>
  </joint>
  <link name="front_caster_wheel">
    <inertial>
      <mass value="0.5"/>
      <!-- <mass value="0.2"/> -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <!-- <inertia ixx="0.005" ixy="0" ixz="0" iyy="0.005" iyz="0" izz="0.005"/> -->
      <inertia ixx="0.00968" ixy="0" ixz="0" iyy="0.00968" iyz="0" izz="0.00968"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.22"/>
      </geometry>
      <material name="Black"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.22"/>
      </geometry>
    </collision>
  </link>
  <joint name="front_caster_joint" type="fixed">
    <parent link="chassis"/>
    <child link="front_caster_wheel"/>
    <origin rpy="0 0 0" xyz="-0.38 0 -0.15"/>
  </joint>
  <link name="lidar">
    <inertial>
      <mass value="0.2"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0006066666666666668" ixy="0" ixz="0" iyy="0.0006066666666666668" iyz="0" izz="0.0010000000000000002"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.08" radius="0.1"/>
      </geometry>
      <material name="Red"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.08" radius="0.1"/>
      </geometry>
    </collision>
  </link>
  <joint name="lidar_joint" type="fixed">
    <parent link="chassis"/>
    <child link="lidar"/>
    <origin rpy="0 0 0" xyz="0 0 0.19"/>
  </joint>
  <!-- Camera Frame -->
  <link name="camera">
    <inertial>
      <mass value="0.1"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0003866666666666667" ixy="0" ixz="0" iyy="0.00010666666666666668" iyz="0" izz="0.0003866666666666667"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.08 0.2 0.08"/>
      </geometry>
      <material name="Blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.08 0.2 0.08"/>
      </geometry>
    </collision>
  </link>
  <joint name="camera_joint" type="fixed">
    <parent link="chassis"/>
    <child link="camera"/>
    <origin rpy="0 0 0" xyz="0.64 0 0"/>
  </joint>
  <!-- Camera Optical Frame -->
  <link name="camera_optical"/>
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera"/>
    <child link="camera_optical"/>
    <!-- Rotate to align with ROS optical frame convention:
           X: Right, Y: Down, Z: Forward -->
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
  </joint>

  <!-- Gazebo Lidar Plugin -->
  <gazebo reference="right_wheel">
      <material>Gazebo/Black</material>
      <mu1>1.0</mu1>
      <mu2>1.0</mu2>
  </gazebo>		
  <gazebo reference="left_wheel">
      <material>Gazebo/Black</material>
      <mu1>1.0</mu1>
      <mu2>1.0</mu2>
  </gazebo>
  <gazebo reference="lidar">
      <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="camera">
      <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="front_caster_wheel">
      <material>Gazebo/Black</material>
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
  </gazebo>

  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <argument>cmd_vel:=cmd_vel</argument>
        <argument>odom:=odom</argument>
      </ros>
      <left_joint>left_joint</left_joint>
      <right_joint>right_joint</right_joint>
      <odometry_frame>odom</odometry_frame>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      <robot_base_frame>base_link</robot_base_frame>
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <wheel_separation>0.92</wheel_separation>
      <wheel_diameter>0.44</wheel_diameter>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin name="joint_states" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>20</update_rate>
      <joint_name>right_joint</joint_name>
      <joint_name>left_joint</joint_name>
      <!-- <joint_name>front_caster_joint</joint_name> -->
    </plugin>
  </gazebo>
  <gazebo reference="lidar">
    <sensor type="ray" name="lidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.1415</min_angle>
            <max_angle>3.1415</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.11</min>
          <max>20</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
      </noise>
      </ray>
      <plugin name="lidar_plugin" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Gazebo Camera Plugin -->
  <gazebo reference="camera">
    <sensor type="camera" name="camera_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.0472</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
      </camera>
      <plugin name="camera_plugin" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>/</namespace>
          <remapping>~/image_raw:=camera/image_raw</remapping>
        </ros>
        <camera_name>camera</camera_name>
        <frame_name>camera_optical</frame_name> <!-- Use camera_optical frame -->
      </plugin>
    </sensor>
  </gazebo>

</robot>
